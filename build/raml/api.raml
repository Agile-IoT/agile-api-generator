#%RAML 1.0
title: AGILE HTTP API
version: 1.0.0
baseUri: https://gw.agile.local/api
mediaType:  application/json
annotationTypes:
  reference: string
securitySchemes:
  oauth2:
    description: |
      API uses OAuth 2.0 for authenticating all API requests.
    type: OAuth 2.0
    describedBy:
      headers:
        Authorization:
          description: |
             Used to send a valid OAuth 2 access token. Do not use
             with the "access_token" query string parameter.
          type: string
      queryParameters:
        access_token:
          description: |
             Used to send a valid OAuth 2 access token. Do not use with
             the "Authorization" header.
          type: string
      responses:
        401:
          description: |
              Bad or expired token. This can happen if the user or 3rdy party service
              revoked or expired an access token. To fix, re-authenticate
              the user.
        403:
          description: |
              Bad OAuth request (wrong consumer key, bad nonce, expired
              timestamp...). Unfortunately, re-authenticating the user won't help here.
    settings:
      authorizationUri: /oauth2/authorize
      accessTokenUri: /oauth2/token
      authorizationGrants: [ authorization_code, implicit, password ]
  basic:
    description: |
      This API supports Basic Authentication.
    type: Basic Authentication
types:
  StatusType:
    displayName: StatusType
    description: null
    required: true
    enum:
      - CONNECTED
      - DISCONNECTED
  ChannelTypeEnum:
    displayName: ChannelTypeEnum
    description: null
    required: true
    enum:
      - Number
      - String
      - Boolean
      - GeoPoint
      - Object
  DeviceStreamChannel:
    displayName: DeviceStreamChannel
    description: 'A channel contains a single measurement value of a sensor'
    required: true
    properties:
      name:
        displayName: name
        description: null
        required: true
      type:
        displayName: type
        description: null
        required: true
  DeviceStream:
    displayName: DeviceStream
    description: 'A stream contains a set of measurement values for a sensor'
    required: true
    properties:
      name:
        displayName: name
        description: null
        required: true
      channels:
        displayName: channels
        description: null
        required: true
        type: 'DeviceStreamChannel[]'
  DeviceDefinition:
    displayName: DeviceDefinition
    description: 'A device definition that contains informations describing the current device'
    required: true
    properties:
      id:
        displayName: id
        description: null
        required: true
      name:
        displayName: name
        description: null
        required: true
      description:
        displayName: description
        description: null
        required: true
      path:
        displayName: path
        description: 'DBus specific path to reach the object instance'
        required: true
      properties:
        displayName: properties
        description: null
        required: true
      streams:
        displayName: streams
        description: null
        required: true
        type: 'DeviceStream[]'
  DeviceOverview:
    displayName: DeviceOverview
    description: null
    required: true
    properties:
      name:
        displayName: name
        description: null
        required: true
      id:
        displayName: id
        description: null
        required: true
      status:
        displayName: status
        description: null
        required: true
        enum:
          - CONNECTED
          - DISCONNECTED
  ProtocolDevice:
    displayName: ProtocolDevice
    description: "List all devices a Protocol knows about.\nThe list is updated by the StartDiscovery method.\nDevices may also be provisioned programmatically during the initialization phase.\n"
    required: true
    type: 'DeviceOverview[]'
  ProtocolStatus:
    displayName: ProtocolStatus
    description: "Identify a status of the Protocol, indicating if operational (AVAILABLE) or\nif for some reason further user-side checks are required.\n"
    required: true
    enum:
      - AVAILABLE
      - UNAVAILABLE
      - NOT_CONFIGURED
      - DISABLED
      - ENABLED
      - FAILURE
  ProtocolProfile:
    displayName: ProtocolProfile
    description: "A Protocol set of settings that translate human readable properties\nto actual Protocol implementation details.\n\nFor example, the user request the temperature value over a BLE connected\ndevice and the Protocol receive all the specific informations (like\nservices and characteristics ids) to enable the data reading.\n"
    required: true
  DiscoverParam:
    displayName: DiscoverParam
    description: null
    required: true
    properties:
      duration:
        displayName: duration
        description: "The duration in seconds the discovery process will last before\nit should be stopped\n"
        required: false
  ProtocolOverview:
    displayName: ProtocolOverview
    description: null
    required: true
    properties:
      name:
        displayName: name
        description: 'The protocol name'
        required: false
      id:
        displayName: id
        description: 'the internal code identifying the protocol'
        required: true
      interface:
        displayName: interface
        description: 'The DBus interface reference'
        required: false
      status:
        displayName: status
        description: null
        required: false
  DriverStatus:
    displayName: DriverStatus
    description: null
    required: true
    enum:
      - ACTIVE
      - NOT_CONFIGURED
      - ERROR
      - FAILURE
  RecordObject:
    displayName: RecordObject
    description: null
    required: true
    properties:
      DeviceId:
        displayName: DeviceId
        description: null
        required: true
      StreamId:
        displayName: StreamId
        description: null
        required: true
      ChannelId:
        displayName: ChannelId
        description: null
        required: true
      LastUpdate:
        displayName: LastUpdate
        description: 'A UNIX timestamp rapresenting the last update of a record'
        required: true
      Channels:
        displayName: Channels
        description: 'A list of key/value matching those indicated in the DeviceDefinition'
        required: true
  BaseQuery:
    displayName: BaseQuery
    description: null
    required: true
    properties:
      Criteria:
        displayName: Criteria
        description: "A key-value series of field-value to query for.\n- Use `*` to indicate a fuzzy search\n- Use an Array to indicate an IN like query\n"
        required: true
      OrderBy:
        displayName: OrderBy
        description: "A key-value series of field-value to order the result for.\n"
        required: true
      Limit:
        displayName: Limit
        description: 'The limit of records founds to return'
        required: true
      Offset:
        displayName: Offset
        description: 'The position for the first record to take from the list of results'
        required: true
  KeyValue:
    displayName: KeyValue
    description: 'A list of key/value pairs'
    required: true
  
# resourceTypes:
  # collection: !include types/collection.raml
# traits:
securedBy: [ oauth2, basic ]

'/{deviceId}/{streamId}/execute/{operation}':
  post:
    body:
      type: object
    description: 'Perform an action on the device'
    (reference): Device.Execute
'/{deviceId}/{streamId}/subscribe':
  post:
    body:
      type: object
    description: "Enable a subscription to a data stream. Asynchronous data updates will\nbe delivered via websocket.\n"
    (reference): Device.Subscribe
  delete:
    body:
      type: object
    description: 'Disable a subscription to a data stream'
    (reference): Device.Unsubscribe
'/{deviceId}/{streamId}':
  get:
    body:
      type: RecordObject
    description: 'Get the list of data stored for a stream'
    (reference): Storage.Get
  put:
    body:
      type: RecordObject
    description: 'Store a data record for the stream'
    (reference): Storage.Create
  delete:
    body: null
    description: 'Delete all data related to a stream'
    (reference): Storage.Delete
  post:
    body:
      type: BaseQuery
    description: 'Search for a stream recordset'
    (reference): Storage.Find
'/{deviceId}/{streamId}/lastUpdate':
  get:
    body:
      type: RecordObject
    description: 'Get the last stored record for a stream'
    (reference): Device.Read
/devices:
  get:
    body:
      type: DeviceDefinition
    description: 'List all registered devices'
  post:
    body:
      type: DeviceDefinition
    description: 'Creates a new device definition'
  '/{deviceId}':
    get:
      body:
        type: DeviceDefinition
      description: 'Get a device definition'
    put:
      body:
        type: DeviceDefinition
      description: 'Update a device definition'
    delete:
      body:
        type: DeviceDefinition
      description: 'Delete a device definition and uregister it'
/protocols:
  get:
    description: 'Get the list of registered protocols'
    body:
      type: 'ProtocolOverview[]'
      example:
        -
          id: BLE
          name: 'Bluetooth LE'
          interface: iot.agile.protocol.BLE
          status: AVAILABLE
  put:
    description: 'Register a new protocol based on an active DBus interface'
    body:
      type: ProtocolOverview
      example:
        name: 'TCP over Pigeon'
        id: TCPoP
        interface: corp.acme.protocol.TCPoP
    responses:
      '202':
        description: 'Protocol has been added'
      '400':
        description: 'An error occured processing the request'
  delete:
    description: "Unregister a protocol by providing the protocol id\n"
    body:
      type: ProtocolOverview
      examples:
        -
          id: TCPoP
  /discovery:
    post:
      (reference): ProtocolManager.StartDiscovery
      body: null
      description: 'Start a device discovery on all available protocols'
      responses:
        '204':
          description: "The discovery has been successfully started on all the regitered\nprotocols; asynchronous updates will be sent via websocket\n"
        '409':
          description: "Indicates that discovery has been requested to the underlying\nprotocols but one or more reported a failure\n"
    delete:
      (reference): ProtocolManager.StopDiscovery
      body: null
      description: 'Stop a device discovery previously initiated'
      responses:
        '204':
          description: "The discovery has been successfully stopped on all the regitered\nprotocols; There will be no further device updates via websocket\n"
        '409':
          description: "Indicates that discovery has been requested to stop on the underlying\nprotocols but one or more reported a failure\n"

